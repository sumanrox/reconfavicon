#!/bin/bash

# Function to fetch the MD5 hash of a favicon
getMD5FaviconHash() {
    local url="$1"
    local md5hash=$(curl "$url" -s | md5sum | cut -d ' ' -f1)
    echo "$md5hash"
}

# Function to fetch the MMH3 hash of a favicon
getMMH3FaviconHash() {
    local url="$1"
    local mmh3hash=$(python3 -c "import requests, mmh3, codecs; response = requests.get('$url'); favicon = codecs.encode(response.content, 'base64'); hash = mmh3.hash(favicon); print(hash)")
    echo "$mmh3hash"
}

banner() {
    echo "   ____               _                         ___                            ______             __   __ __   _   __ " | lolcat
    echo "  / __/ ___ _ _  __  (_) ____ ___   ___        / _ \ ___  ____ ___   ___      /_  __/ ___  ___   / /  / //_/  (_) / /_" | lolcat
    echo " / _/  / _ \`/| |/ / / / / __// _ \ / _ \      / , _// -_)/ __// _ \ / _ \      / /   / _ \/ _ \ / /  / ,<    / / / __/"| lolcat
    echo "/_/    \_,_/ |___/ /_/  \__/ \___//_//_/     /_/|_| \__/ \__/ \___//_//_/     /_/    \___/\___//_/  /_/|_|  /_/  \__/"  | lolcat
    echo ""
    echo "by Suman Roy | Made with ‚ô• "|lolcat
}


# Main function
reconFaviconHash() {
    if [[ -n "$1" ]]; then
        local url="$1"
        echo -e "\n[----Favicon Recon Toolkit----]\n" | lolcat
        banner
        echo -e "\n[----Response From The Server----]\n" | lolcat
        if curl -s --head "$url"$ 2>/dev/null; then
            local owaspDatabase='https://wiki.owasp.org/index.php/OWASP_favicon_database'
            local githubRepoDatabase='https://raw.githubusercontent.com/sansatart/scrapts/master/shodan-favicon-hashes.csv'
            local githubRepoDatabaseFilter='Hash,Product/Framework,HTTP Title,Header Information'
            local md5hash=$(getMD5FaviconHash "$url")
            local mmh3hash=$(getMMH3FaviconHash "$url")
            local stripedMMH3FaviconHash=$(echo -e $mmh3hash)
            local owaspFlag=0
            local githubFlag=0
            echo -e "[ ‚ö°] MD5 Hash  : $md5hash" | lolcat
            echo -e "[ ‚ö°] MMH3 Hash : $mmh3hash\n" | lolcat
            echo -e "[üîé] Searching Online Database against MD5  Hash : $md5hash" | lolcat
            echo -e "[üîé] Searching Online Database against MMH3 Hash : $stripedMMH3FaviconHash\n" | lolcat
            
            
            # Search in OWASP Database
            if [[ $(curl $owaspDatabase -s | grep $md5hash | cut -d ':' -f1) == $md5hash ]]; then
                    echo -e "[üî•] Found Record in OWASP Database\n" | lolcat
                    echo -e "$(curl $owaspDatabase -s | grep $md5hash | column -t -s ':' --output-separator=' | ' -N Hash,Framework)\n" | lolcat
                    owaspFlag=1
            fi
            
            # Search in Github Repo Database
            if [[ $(curl $githubRepoDatabase -s | grep $mmh3hash | cut -d ',' -f1) == $mmh3hash ]]; then
                    echo -e "[üî•] Found Record in Github Repo Database" | lolcat
                    local data=$(curl $githubRepoDatabase -s | grep $mmh3hash)
                    echo $data | column -t -s ',' --output-separator=' | ' -N 'Hash,Product/Framework,HTTP Title,Header Information'
                    githubFlag=1
            fi
             
            if [[ $owaspFlag == 0 && $githubFlag == 0 ]]; then
                echo -e "[ü•≤] No Results Found in current Database" | lolcat
            fi

            # Display the prompts for Shodan and ZoomEye
            echo -e "\n"
            queries=(
                "[----Now Use Shodan and ZoomEye----]"
                "[üåê] ZoomEye Query [WEB] = iconhash:\"$md5hash\""
                "[üåê] ZoomEye Query [WEB] = iconhash:\"$mmh3hash\""
                "[üåê] Shodan Query  [WEB] = http.favicon.hash:\"$stripedMMH3FaviconHash\""
                "[üåê] Shodan Query  [CMD] = shodan search http.favicon.hash:\"$stripedMMH3FaviconHash\" --fields ip_str,port --separator \" \""
            )

            for query in "${queries[@]}"; do
                echo -e "$query" | lolcat
            done
        else
            echo -e "\n[üíÄüíÄ!ERROR!üíÄüíÄ] Connection Failed, Check URL\n" | lolcat
        fi
    fi
}
if [[ $# -eq 0 ]]; then
    echo "Usage: $0 <URL>"
    exit 1
fi
URL="$1"
reconFaviconHash $URL

# Example usage: reconFaviconHash "https://example.com/favicon.ico"
